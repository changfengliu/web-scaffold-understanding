(window.webpackJsonp=window.webpackJsonp||[]).push([[5],{171:function(t,a,s){t.exports=s.p+"assets/img/webpack.218dffdd.png"},189:function(t,a,s){"use strict";s.r(a);var e=[function(){var t=this,a=t.$createElement,e=t._self._c||a;return e("div",{staticClass:"content"},[e("h1",{attrs:{id:"webpack"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#webpack","aria-hidden":"true"}},[t._v("#")]),t._v(" webpack")]),t._v(" "),e("h2",{attrs:{id:"what"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#what","aria-hidden":"true"}},[t._v("#")]),t._v(" what")]),t._v(" "),e("p",[t._v("Webpack is：")]),t._v(" "),e("ul",[e("li",[t._v("a "),e("strong",[t._v("module bundler")]),t._v(" and not a task runner.")]),t._v(" "),e("li",[t._v("a "),e("strong",[t._v("static")]),t._v(" build tool, not a module loader.")])]),t._v(" "),e("p",[t._v("前端模块管理工具/打包器。它将前端资源 js/css/html/image/fonts等，打包成 js  模块，然后统一管理。\nhttps://webpack.js.org/")]),t._v(" "),e("p",[t._v("Webpack是JS应用程序的模块(资源)打包器，它把JS应用程序开发过程中的所有资源都看作一个模块，包括JS、CSS、图片等。它在运行时递归地解析所有模块的依赖关系，构建依赖关系图，而后产生一个bundle.js，供浏览器直接加载。")]),t._v(" "),e("p",[t._v("特点：")]),t._v(" "),e("ul",[e("li",[t._v("所有的都是模块")]),t._v(" "),e("li",[t._v("本身仅识别JavaScript(有编译过程，其它资源不解析或通过第三方插件解析)")]),t._v(" "),e("li",[t._v("模块相对独立，相互依赖")]),t._v(" "),e("li",[t._v("打包过程高度可配置")])]),t._v(" "),e("img",{attrs:{src:s(171)}}),t._v(" "),e("h2",{attrs:{id:"核心概念"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#核心概念","aria-hidden":"true"}},[t._v("#")]),t._v(" 核心概念")]),t._v(" "),e("h3",{attrs:{id:"entry"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#entry","aria-hidden":"true"}},[t._v("#")]),t._v(" entry")]),t._v(" "),e("p",[t._v("The contextual root of your app.")]),t._v(" "),e("p",[t._v("The first js file to load to ‘kick-off’ your app in the browser.")]),t._v(" "),e("h3",{attrs:{id:"output"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#output","aria-hidden":"true"}},[t._v("#")]),t._v(" output")]),t._v(" "),e("p",[t._v("Tells webpack where and how to distribute bundles.")]),t._v(" "),e("h3",{attrs:{id:"loader"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#loader","aria-hidden":"true"}},[t._v("#")]),t._v(" loader")]),t._v(" "),e("p",[t._v("Tells webpack how to load files in your content base.")]),t._v(" "),e("h3",{attrs:{id:"plugins"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#plugins","aria-hidden":"true"}},[t._v("#")]),t._v(" plugins")]),t._v(" "),e("p",[t._v("a class/function, which apply functionality at the compilation level")]),t._v(" "),e("p",[t._v("a plugin is an ES5 ‘class’ which implements an apply function, the compiler uses it to emit events.")]),t._v(" "),e("p",[t._v("80% of webpack is made up of its own plugin system.")]),t._v(" "),e("p",[t._v("WebPack自动 vue 组件全局注册（扫描组件目录）:")]),t._v(" "),e("div",{staticClass:"language-javascript extra-class"},[e("pre",{pre:!0,attrs:{class:"language-javascript"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" Vue "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'vue'")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" upperFirst "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'lodash/upperFirst'")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" camelCase "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'lodash/camelCase'")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" requireComponent "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" require"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("context")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 其组件目录的相对路径")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'./components'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 是否查询其子目录")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 匹配基础组件文件名的正则表达式")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("Base"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),e("span",{pre:!0,attrs:{class:"token constant"}},[t._v("A")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),e("span",{pre:!0,attrs:{class:"token constant"}},[t._v("Z")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\\w"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v("\\"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("vue"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("js"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("$"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nrequireComponent"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("keys")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("forEach")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("fileName "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 获取组件配置")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" componentConfig "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("requireComponent")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("fileName"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 获取组件的 PascalCase 命名")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" componentName "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("upperFirst")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("camelCase")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n      "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 剥去文件名开头的 `./` 和结尾的扩展名")]),t._v("\n      fileName"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("replace")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token regex"}},[t._v("/^\\.\\/(.*)\\.\\w+$/")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'$1'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 全局注册组件")]),t._v("\n  Vue"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("component")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n    componentName"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 如果这个组件选项是通过 `export default` 导出的，")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 那么就会优先使用 `.default`，")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 否则回退到使用模块的根。")]),t._v("\n    componentConfig"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("default")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("||")]),t._v(" componentConfig\n  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n")])])]),e("h2",{attrs:{id:"代码切割"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#代码切割","aria-hidden":"true"}},[t._v("#")]),t._v(" 代码切割")]),t._v(" "),e("p",[t._v("Src — code split —> bundle  然后这些 bundle 就可以被按需加载，或并行加载。\n代码切割的方式：\n1.webpack entry\n这种方式的问题：1. 多个 bundle 中可能存在重复的 chunk.  2. 它本身是静态的，不能实现动态异步加载。\n2.提取公共代码，已被整合到 webpack v4 的代码优化版块。\n3.动态加载 import\n附加功能：\nParent Chunk 中  Prefetch 后续可能用到的 chunk.")]),t._v(" "),e("h2",{attrs:{id:"webpack-cli"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#webpack-cli","aria-hidden":"true"}},[t._v("#")]),t._v(" webpack cli")]),t._v(" "),e("p",[t._v("webpack -p ：prd模式的编译.\n全写：webpack --optimize-minimize --define process.env.NODE_ENV=\"'production'\"")]),t._v(" "),e("h2",{attrs:{id:"tree-shaking"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#tree-shaking","aria-hidden":"true"}},[t._v("#")]),t._v(" tree-shaking")]),t._v(" "),e("p",[t._v("其实也确实不是什么特别神的东西，原理而言 @顾轶灵 的回答已经讲得比较清楚了，我想指出的一点就是不管是 rollup 还是 webpack 2，tree-shaking 都是因为 ES6 modules 的静态特性才得以实现的。ES6 modules 的 import 和 export statements 相比完全动态的 CommonJS require，有着本质的区别。举例来说：")]),t._v(" "),e("ol",[e("li",[t._v("只能作为模块顶层的语句出现，不能出现在 function 里面或是 if 里面。（ECMA-262 15.2)")]),t._v(" "),e("li",[t._v("import 的模块名只能是字符串常量。(ECMA-262 15.2.2)")]),t._v(" "),e("li",[t._v("不管 import 的语句出现的位置在哪里，在模块初始化的时候所有的 import 都必须已经导入完成。换句话说，ES6 imports are hoisted。(ECMA-262 15.2.1.16.4 - 8.a)")]),t._v(" "),e("li",[t._v("import binding 是 immutable 的，类似 const。比如说你不能 import { a } from './a' 然后给 a 赋值个其他什么东西。(ECMA-262 15.2.1.16.4 - 12.c.3)\n这些设计虽然使得灵活性不如 CommonJS 的 require，但却保证了 ES6 modules 的依赖关系是确定 (deterministic) 的，和运行时的状态无关，从而也就保证了 ES6 modules 是可以进行可靠的静态分析的。对于主要在服务端运行的 Node 来说，所有的代码都在本地，按需动态 require 即可，但对于要下发到客户端的 web 代码而言，要做到高效的按需使用，不能等到代码执行了才知道模块的依赖，必须要从模块的静态分析入手。这是 ES6 modules 在设计时的一个重要考量，也是为什么没有直接采用 CommonJS。\n正是基于这个基础上，才使得 tree-shaking 成为可能（这也是为什么 rollup 和 webpack 2 都要用 ES6 module syntax 才能 tree-shaking），所以说与其说 tree-shaking 这个技术怎么了不起，不如说是 ES6 module 的设计在模块静态分析上的种种考量值得赞赏。\nhttps://www.zhihu.com/question/41922432")])]),t._v(" "),e("h2",{attrs:{id:"插件列表"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#插件列表","aria-hidden":"true"}},[t._v("#")]),t._v(" 插件列表")]),t._v(" "),e("p",[t._v("LoaderOptionsPlugin    :"),e("br"),t._v("\n由于webpack2+已不允许扩展webpack配置，此插件提供了一种方式，把option 传递给所有loader\nhttps://webpack.js.org/plugins/loader-options-plugin/")]),t._v(" "),e("p",[t._v("DefinePlugin    :"),e("br"),t._v("\n扫描所有源代码，执行搜索替换的操作。")]),t._v(" "),e("h2",{attrs:{id:"loader-2"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#loader-2","aria-hidden":"true"}},[t._v("#")]),t._v(" loader")]),t._v(" "),e("ul",[e("li",[t._v("Loaders can be chained. They are applied in a pipeline to the resource. A chain of loaders are compiled chronologically. The first loader in a chain of loaders returns a value to the next. At the end loader, webpack expects JavaScript to be returned.")]),t._v(" "),e("li",[t._v("Loaders can be synchronous or asynchronous.")]),t._v(" "),e("li",[t._v("Loaders run in Node.js and can do everything that’s possible there.")]),t._v(" "),e("li",[t._v("Loaders accept query parameters. This can be used to pass configuration to the loader.")]),t._v(" "),e("li",[t._v("Loaders can also be configured with an options object.")]),t._v(" "),e("li",[t._v("Normal modules can export a loader in addition to the normal main via package.json with the loader field.")]),t._v(" "),e("li",[t._v("Plugins can give loaders more features.")]),t._v(" "),e("li",[t._v("Loaders can emit additional arbitrary files.")])]),t._v(" "),e("p",[t._v("loader类别\nSync Loader\nAsync Loader\nRaw Loader\nPitching Loader")]),t._v(" "),e("p",[t._v("loader上下文")]),t._v(" "),e("h2",{attrs:{id:"热加载"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#热加载","aria-hidden":"true"}},[t._v("#")]),t._v(" 热加载")])])}],n=s(0),r=Object(n.a)({},function(){this.$createElement;this._self._c;return this._m(0)},e,!1,null,null,null);r.options.__file="webpack.md";a.default=r.exports}}]);